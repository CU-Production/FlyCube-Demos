name: Linux builds

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cxx:
#          - g++-6
          - g++-7
          - g++-8
          - g++-9
          - g++-10
          - clang++-6.0
          - clang++-7
          - clang++-8
          - clang++-9
          - clang++-10
        build_type: [Debug, Release]
        std: [14]
        surrogates: [OFF]
        include:
        # cannot be installed on ubuntu-20.04 be default?
#          - cxx: g++-6
#            other_pkgs: g++-6
          - cxx: clang++-6.0
            other_pkgs: clang-6.0
          - cxx: clang++-7
            other_pkgs: clang-7
          - cxx: clang++-10
            other_pkgs: clang-10
        # We want one build to build surrogates -- but not more, to
        # avoid trouble with long compilation/CI times.
          - cxx: clang++-10
            build_type: Debug
            std: 14
            other_pkgs: clang-10
            surrogates: ON
        # Clang 10 + C++17
          - cxx: clang++-10
            build_type: Debug
            std: 17
            other_pkgs: clang-10
            surrogates: OFF
          - cxx: clang++-10
            build_type: Release
            std: 17
            other_pkgs: clang-10
            surrogates: OFF

    steps:
    - uses: actions/checkout@v2

    - name: Prepare environment
      run: sudo apt-get install -y ninja-build ${{matrix.other_pkgs}}

    - name: Configure build
      working-directory: ${{runner.workspace}}
      env:
        CXX: ${{matrix.cxx}}
        CXXFLAGS: ${{matrix.cxxflags}}
      # Note: $GITHUB_WORKSPACE is distinct from ${{runner.workspace}}.
      #       This is important
      run: |
        cmake -Bbuild -H$GITHUB_WORKSPACE \
              -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
              -DCMAKE_CXX_STANDARD=${{matrix.std}} \
              -DCMAKE_CXX_EXTENSIONS=OFF \
              -DCATCH_DEVELOPMENT_BUILD=ON \
              -DCATCH_BUILD_SURROGATES=${{matrix.surrogates}} \
              -G Ninja

    - name: Build tests + lib
      working-directory: ${{runner.workspace}}/build
      run: ninja

    - name: Run tests
      env:
          CTEST_OUTPUT_ON_FAILURE: 1
      working-directory: ${{runner.workspace}}/build
      # Hardcode 2 cores we know are there
      run: ctest -C ${{matrix.build_type}} -j 2
